buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "http://repo.spongepowered.org/maven" }
        maven { url "https://plugins.gradle.org/m2/" }

    }


    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}


repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" } //JEI
    maven { url "http://maven.covers1624.net" } //CoFH
    maven { url "http://chickenbones.net/maven" } //CCL
    maven { url "http://www.dimdev.org/maven" } //KitsuneAlex etc.

    ivy {
        url "https://google.com/404"
        ivyPattern("https://google.com/404") // Workaround for https://github.com/gradle/gradle/issues/4107
        artifactPattern("https://media.forgecdn.net/files/[organisation]/[module]/[revision].[ext]")
    }
}


apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'org.spongepowered.mixin'


version = "${mod_version}-snapshot${getDate()}"
group = "com.stormy.lightningadditions"
archivesBaseName = "lightningadditions-${mc_version}"
sourceCompatibility = targetCompatibility = '1.8'


def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}


compileJava { sourceCompatibility = targetCompatibility = '1.8' }


minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${obf_mappings}"
    makeObfSourceJar = false
    useDepAts = true

    def args = [
            "-Dmixin.hotSwap=true",
            "-Dmixin.checks.interfaces=true",
            "-Dmixin.debug.export=true" ]

    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
    //replace 'version', project.version
    //replace 'mcversion', project.minecraft.version
    //replace 'forge', "forge@[${project.forge_version},);"
    //replace 'codechickenlib', "codechickenlib@[${project.ccl_version},);"
    //replace 'frame', "frame@[${frame_version},);"
    //replaceIn "de/kitsunealex/tesseract/util/Constants.java"
}


dependencies {
    implementation("org.dimdev:mixin:0.7.11-SNAPSHOT") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io" }

    compile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
    compile "de.kitsunealex.frame:Frame-${mc_version}:${frame_version}:deobf"
    deobfCompile "cofh:RedstoneFlux:${mc_sversion}-${rf_version}:universal"
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs)
            { exclude '*.info' }

    reobf { jar { mappingType = 'SEARGE' } }
    jar { classifier = 'universal' }
    
    artifacts { archives jar }
}
